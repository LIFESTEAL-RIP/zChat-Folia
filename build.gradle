plugins {
    id 'java'
    id('com.github.johnrengelman.shadow') version '8.1.1'
}

group = 'dev.mrzcookie'
version = '1.0.4'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "devmart-other"
        url = "https://nexuslite.gcnt.net/repos/other/"
    }
    maven {
        name = "devmart-other"
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
}

dependencies {
    compileOnly "dev.folia:folia-api:1.20.1-R0.1-SNAPSHOT"
    compileOnly "net.luckperms:api:5.4"
    compileOnly "me.clip:placeholderapi:2.11.5"
    implementation "org.bstats:bstats-bukkit:3.0.2"
    implementation "net.kyori:adventure-platform-bukkit:4.3.2"
    implementation "net.kyori:adventure-text-minimessage:4.16.0"
    implementation "net.kyori:adventure-text-serializer-plain:4.16.0"
    implementation "net.kyori:adventure-text-serializer-legacy:4.16.0"
    implementation "com.tcoded:FoliaLib:0.3.1"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

shadowJar {
    archiveBaseName.set('zChat')
    archiveClassifier.set('')

    relocate 'com.tcoded.folialib', 'dev.mrzcookie.zchat.libraries.folialib'
    relocate 'org.bstats', 'dev.mrzcookie.zchat.libraries.bstats'
    relocate 'net.kyori', 'dev.mrzcookie.zchat.libraries.kyori'
}

processResources {
    def props = [version: version]
    inputs.properties props
            filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}